/*
 * This file is generated by jOOQ.
 */
package com.payment.infrastructure.jooq.tables.records;


import com.payment.infrastructure.jooq.tables.PaymentTypes;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class PaymentTypesRecord extends UpdatableRecordImpl<PaymentTypesRecord> implements Record8<Integer, Integer, String, String, String, Boolean, LocalDateTime, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.payment_types.id</code>.
     */
    public PaymentTypesRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.payment_types.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.payment_types.mode_id</code>.
     */
    public PaymentTypesRecord setModeId(Integer value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.payment_types.mode_id</code>.
     */
    public Integer getModeId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.payment_types.type_code</code>.
     */
    public PaymentTypesRecord setTypeCode(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.payment_types.type_code</code>.
     */
    public String getTypeCode() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.payment_types.type_name</code>.
     */
    public PaymentTypesRecord setTypeName(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.payment_types.type_name</code>.
     */
    public String getTypeName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.payment_types.description</code>.
     */
    public PaymentTypesRecord setDescription(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.payment_types.description</code>.
     */
    public String getDescription() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.payment_types.is_active</code>.
     */
    public PaymentTypesRecord setIsActive(Boolean value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>public.payment_types.is_active</code>.
     */
    public Boolean getIsActive() {
        return (Boolean) get(5);
    }

    /**
     * Setter for <code>public.payment_types.created_at</code>.
     */
    public PaymentTypesRecord setCreatedAt(LocalDateTime value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>public.payment_types.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(6);
    }

    /**
     * Setter for <code>public.payment_types.updated_at</code>.
     */
    public PaymentTypesRecord setUpdatedAt(LocalDateTime value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>public.payment_types.updated_at</code>.
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<Integer, Integer, String, String, String, Boolean, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<Integer, Integer, String, String, String, Boolean, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return PaymentTypes.PAYMENT_TYPES.ID;
    }

    @Override
    public Field<Integer> field2() {
        return PaymentTypes.PAYMENT_TYPES.MODE_ID;
    }

    @Override
    public Field<String> field3() {
        return PaymentTypes.PAYMENT_TYPES.TYPE_CODE;
    }

    @Override
    public Field<String> field4() {
        return PaymentTypes.PAYMENT_TYPES.TYPE_NAME;
    }

    @Override
    public Field<String> field5() {
        return PaymentTypes.PAYMENT_TYPES.DESCRIPTION;
    }

    @Override
    public Field<Boolean> field6() {
        return PaymentTypes.PAYMENT_TYPES.IS_ACTIVE;
    }

    @Override
    public Field<LocalDateTime> field7() {
        return PaymentTypes.PAYMENT_TYPES.CREATED_AT;
    }

    @Override
    public Field<LocalDateTime> field8() {
        return PaymentTypes.PAYMENT_TYPES.UPDATED_AT;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public Integer component2() {
        return getModeId();
    }

    @Override
    public String component3() {
        return getTypeCode();
    }

    @Override
    public String component4() {
        return getTypeName();
    }

    @Override
    public String component5() {
        return getDescription();
    }

    @Override
    public Boolean component6() {
        return getIsActive();
    }

    @Override
    public LocalDateTime component7() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime component8() {
        return getUpdatedAt();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public Integer value2() {
        return getModeId();
    }

    @Override
    public String value3() {
        return getTypeCode();
    }

    @Override
    public String value4() {
        return getTypeName();
    }

    @Override
    public String value5() {
        return getDescription();
    }

    @Override
    public Boolean value6() {
        return getIsActive();
    }

    @Override
    public LocalDateTime value7() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime value8() {
        return getUpdatedAt();
    }

    @Override
    public PaymentTypesRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public PaymentTypesRecord value2(Integer value) {
        setModeId(value);
        return this;
    }

    @Override
    public PaymentTypesRecord value3(String value) {
        setTypeCode(value);
        return this;
    }

    @Override
    public PaymentTypesRecord value4(String value) {
        setTypeName(value);
        return this;
    }

    @Override
    public PaymentTypesRecord value5(String value) {
        setDescription(value);
        return this;
    }

    @Override
    public PaymentTypesRecord value6(Boolean value) {
        setIsActive(value);
        return this;
    }

    @Override
    public PaymentTypesRecord value7(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public PaymentTypesRecord value8(LocalDateTime value) {
        setUpdatedAt(value);
        return this;
    }

    @Override
    public PaymentTypesRecord values(Integer value1, Integer value2, String value3, String value4, String value5, Boolean value6, LocalDateTime value7, LocalDateTime value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PaymentTypesRecord
     */
    public PaymentTypesRecord() {
        super(PaymentTypes.PAYMENT_TYPES);
    }

    /**
     * Create a detached, initialised PaymentTypesRecord
     */
    public PaymentTypesRecord(Integer id, Integer modeId, String typeCode, String typeName, String description, Boolean isActive, LocalDateTime createdAt, LocalDateTime updatedAt) {
        super(PaymentTypes.PAYMENT_TYPES);

        setId(id);
        setModeId(modeId);
        setTypeCode(typeCode);
        setTypeName(typeName);
        setDescription(description);
        setIsActive(isActive);
        setCreatedAt(createdAt);
        setUpdatedAt(updatedAt);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised PaymentTypesRecord
     */
    public PaymentTypesRecord(com.payment.infrastructure.jooq.tables.pojos.PaymentTypes value) {
        super(PaymentTypes.PAYMENT_TYPES);

        if (value != null) {
            setId(value.getId());
            setModeId(value.getModeId());
            setTypeCode(value.getTypeCode());
            setTypeName(value.getTypeName());
            setDescription(value.getDescription());
            setIsActive(value.getIsActive());
            setCreatedAt(value.getCreatedAt());
            setUpdatedAt(value.getUpdatedAt());
            resetChangedOnNotNull();
        }
    }
}
