/*
 * This file is generated by jOOQ.
 */
package com.payment.infrastructure.jooq;


import com.payment.infrastructure.jooq.tables.PaymentModes;
import com.payment.infrastructure.jooq.tables.PaymentTypes;
import com.payment.infrastructure.jooq.tables.Transactions;
import com.payment.infrastructure.jooq.tables.Users;
import com.payment.infrastructure.jooq.tables.records.PaymentModesRecord;
import com.payment.infrastructure.jooq.tables.records.PaymentTypesRecord;
import com.payment.infrastructure.jooq.tables.records.TransactionsRecord;
import com.payment.infrastructure.jooq.tables.records.UsersRecord;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * public.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<PaymentModesRecord> PAYMENT_MODES_MODE_CODE_KEY = Internal.createUniqueKey(PaymentModes.PAYMENT_MODES, DSL.name("payment_modes_mode_code_key"), new TableField[] { PaymentModes.PAYMENT_MODES.MODE_CODE }, true);
    public static final UniqueKey<PaymentModesRecord> PAYMENT_MODES_PKEY = Internal.createUniqueKey(PaymentModes.PAYMENT_MODES, DSL.name("payment_modes_pkey"), new TableField[] { PaymentModes.PAYMENT_MODES.ID }, true);
    public static final UniqueKey<PaymentTypesRecord> PAYMENT_TYPES_MODE_ID_TYPE_CODE_KEY = Internal.createUniqueKey(PaymentTypes.PAYMENT_TYPES, DSL.name("payment_types_mode_id_type_code_key"), new TableField[] { PaymentTypes.PAYMENT_TYPES.MODE_ID, PaymentTypes.PAYMENT_TYPES.TYPE_CODE }, true);
    public static final UniqueKey<PaymentTypesRecord> PAYMENT_TYPES_PKEY = Internal.createUniqueKey(PaymentTypes.PAYMENT_TYPES, DSL.name("payment_types_pkey"), new TableField[] { PaymentTypes.PAYMENT_TYPES.ID }, true);
    public static final UniqueKey<TransactionsRecord> TRANSACTIONS_IDEMPOTENCY_KEY_KEY = Internal.createUniqueKey(Transactions.TRANSACTIONS, DSL.name("transactions_idempotency_key_key"), new TableField[] { Transactions.TRANSACTIONS.IDEMPOTENCY_KEY }, true);
    public static final UniqueKey<TransactionsRecord> TRANSACTIONS_PKEY = Internal.createUniqueKey(Transactions.TRANSACTIONS, DSL.name("transactions_pkey"), new TableField[] { Transactions.TRANSACTIONS.ID }, true);
    public static final UniqueKey<UsersRecord> USERS_EMAIL_KEY = Internal.createUniqueKey(Users.USERS, DSL.name("users_email_key"), new TableField[] { Users.USERS.EMAIL }, true);
    public static final UniqueKey<UsersRecord> USERS_PKEY = Internal.createUniqueKey(Users.USERS, DSL.name("users_pkey"), new TableField[] { Users.USERS.ID }, true);
    public static final UniqueKey<UsersRecord> USERS_USERNAME_KEY = Internal.createUniqueKey(Users.USERS, DSL.name("users_username_key"), new TableField[] { Users.USERS.USERNAME }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<PaymentTypesRecord, PaymentModesRecord> PAYMENT_TYPES__PAYMENT_TYPES_MODE_ID_FKEY = Internal.createForeignKey(PaymentTypes.PAYMENT_TYPES, DSL.name("payment_types_mode_id_fkey"), new TableField[] { PaymentTypes.PAYMENT_TYPES.MODE_ID }, Keys.PAYMENT_MODES_PKEY, new TableField[] { PaymentModes.PAYMENT_MODES.ID }, true);
    public static final ForeignKey<TransactionsRecord, PaymentModesRecord> TRANSACTIONS__FK_PAYMENT_MODE = Internal.createForeignKey(Transactions.TRANSACTIONS, DSL.name("fk_payment_mode"), new TableField[] { Transactions.TRANSACTIONS.PAYMENT_MODE }, Keys.PAYMENT_MODES_MODE_CODE_KEY, new TableField[] { PaymentModes.PAYMENT_MODES.MODE_CODE }, true);
}
